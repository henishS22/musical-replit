import { Module } from '@nestjs/common';
import { MongooseModule } from '@nestjs/mongoose';
import {
  Account,
  AccountSchema,
  Applications,
  ApplicationsSchema,
  Checkout,
  CheckoutSchema,
  City,
  CitySchema,
  Collaboration,
  CollaborationSchema,
  Country,
  CountrySchema,
  Folder,
  FolderSchema,
  Invite,
  InviteSchema,
  Lyrics,
  LyricsSchema,
  Nft,
  NftSchema,
  NotificationFormat,
  NotificationFormatSchema,
  Notify,
  NotifySchema,
  PasswordReset,
  PasswordResetSchema,
  Project,
  ProjectSchema,
  Register,
  RegisterSchema,
  Release,
  ReleaseSchema,
  Room,
  RoomsAccess,
  RoomsAccessSchema,
  RoomsCalls,
  RoomsCallsSchema,
  RoomSchema,
  SkillLevelSchema,
  SkillTypeSchema,
  State,
  StateSchema,
  Style,
  StyleSchema,
  Tag,
  TagSchema,
  Track,
  TrackProjectSchema,
  TrackSchema,
  TrackComment,
  TrackCommentSchema,
  User,
  UserFollowSchema,
  UserSchema,
  LanguageSchema,
  DesignSchema,
  Post,
  PostSchema,
  Forum,
  ForumSchema,
  SubscriptionSchema,
  Subscription,
  UserSubscriptionSchema,
  UserSubscription,
  LiveStream,
  LiveStreamSchema,
  TokenTransaction,
  TokenTransactionSchema,
  Transaction,
  TransactionSchema,
  DistroSchema,
  Distro,
  NftExchange,
  NftExchangeSchema,
  Metadata,
  MetadataSchema,
  CollabRoleSchema,
  GamificationEvent,
  GamificationEventSchema,
  UserActivity,
  UserActivitySchema,
  GuildedNft,
  GuildedNftSchema,
} from './schemas';
import { SongContest, SongContestSchema } from './schemas/song-contest.schema';
import {
  SavedSongContest,
  SavedSongContestSchema,
} from './schemas/savedSongContest.schema';
import {
  SongContestApplicationSchema,
  songContestApplications,
} from './schemas/songContestApplications.schema';
import { PinataIpfsSchema, PinataIpfs } from './schemas/pinataIpfs.schema';
import { PinataIpfsGroupSchema, PinataIpfsGroup } from './schemas';
import { UserStorageSchema, UserStorage } from './schemas';
import { UserFile, UserFileSchema } from './schemas/user-file.schema';
import { EventTransaction, EventTransactionSchema } from './schemas/eventTransaction';
import { Quest, QuestSchema } from './schemas/quest';
import { CreatorQuest, CreatorQuestSchema } from './schemas/creatorQuest';
import { QuestHistory, QuestHistorySchema } from './schemas/questHistory.schema';
import { Leaderboard, LeaderboardSchema } from './schemas/leaderboard';

@Module({
  imports: [
    MongooseModule.forFeature([
      { name: 'skill_level', schema: SkillLevelSchema },
      { name: 'skill_type', schema: SkillTypeSchema },
      { name: 'tracks_projects', schema: TrackProjectSchema },
      { name: 'tracks', schema: TrackSchema },
      { name: 'users_follow', schema: UserFollowSchema },
      { name: Account.name, schema: AccountSchema },
      { name: Applications.name, schema: ApplicationsSchema },
      { name: Checkout.name, schema: CheckoutSchema },
      { name: City.name, schema: CitySchema },
      { name: Collaboration.name, schema: CollaborationSchema },
      { name: Country.name, schema: CountrySchema },
      { name: Folder.name, schema: FolderSchema },
      { name: Invite.name, schema: InviteSchema },
      { name: Lyrics.name, schema: LyricsSchema },
      { name: Nft.name, schema: NftSchema },
      { name: NotificationFormat.name, schema: NotificationFormatSchema },
      { name: Notify.name, schema: NotifySchema },
      { name: PasswordReset.name, schema: PasswordResetSchema },
      { name: Project.name, schema: ProjectSchema },
      { name: Register.name, schema: RegisterSchema },
      { name: Release.name, schema: ReleaseSchema },
      { name: Room.name, schema: RoomSchema },
      { name: RoomsAccess.name, schema: RoomsAccessSchema },
      { name: RoomsCalls.name, schema: RoomsCallsSchema },
      { name: State.name, schema: StateSchema },
      { name: Style.name, schema: StyleSchema },
      { name: Tag.name, schema: TagSchema },
      { name: Track.name, schema: TrackSchema },
      { name: TrackComment.name, schema: TrackCommentSchema },
      { name: User.name, schema: UserSchema },
      { name: 'languages', schema: LanguageSchema },
      { name: 'design', schema: DesignSchema },
      { name: SongContest.name, schema: SongContestSchema },
      { name: SavedSongContest.name, schema: SavedSongContestSchema },
      {
        name: songContestApplications.name,
        schema: SongContestApplicationSchema,
      },
      { name: Post.name, schema: PostSchema },
      { name: Subscription.name, schema: SubscriptionSchema },
      { name: UserSubscription.name, schema: UserSubscriptionSchema },
      { name: PinataIpfs.name, schema: PinataIpfsSchema },
      { name: PinataIpfsGroup.name, schema: PinataIpfsGroupSchema },
      { name: UserStorage.name, schema: UserStorageSchema },
      { name: Forum.name, schema: ForumSchema },
      { name: LiveStream.name, schema: LiveStreamSchema },
      { name: TokenTransaction.name, schema: TokenTransactionSchema },
      { name: Transaction.name, schema: TransactionSchema },
      { name: Distro.name, schema: DistroSchema },
      { name: NftExchange.name, schema: NftExchangeSchema },
      { name: Metadata.name, schema: MetadataSchema },
      { name: GamificationEvent.name, schema: GamificationEventSchema },
      { name: "collabRole", schema: CollabRoleSchema },
      { name: UserFile.name, schema: UserFileSchema },
      { name: UserActivity.name, schema: UserActivitySchema },
      { name: EventTransaction.name, schema: EventTransactionSchema },
      { name: Quest.name, schema: QuestSchema },
      { name: CreatorQuest.name, schema: CreatorQuestSchema },
      { name: QuestHistory.name, schema: QuestHistorySchema },



      { name: Leaderboard.name, schema: LeaderboardSchema },
      { name: GuildedNft.name, schema: GuildedNftSchema },


    ]),
  ],
  exports: [MongooseModule],
})
export class SchemasModule { }
