import { ConfigInterface } from '@config'

export default (): ConfigInterface => {
	return {
		PORT: parseInt(process.env.PROD_PORT || process.env.PORT),
		ENVIRONMENT: 'production',

		DB_CONNECTION_STRING: process.env.DB_CONNECTION_STRING,

		SALT_ROUNDS: parseInt(process.env.SALT_ROUNDS),

		JWT_SECRET: process.env.JWT_SECRET,
		JWT_EXPIRY: process.env.JWT_EXPIRY,

		TWILIO: {
			SID: process.env.TWILIO_SID,
			TOKEN: process.env.TWILIO_TOKEN,
			FROM: process.env.TWILIO_FROM,
		},

		BACKEND_HOSTED_URL: process.env.BACKEND_HOSTED_URL,

		RATE_LIMITER_TIME_IN_SEC: process.env.RATE_LIMITER_TIME_IN_SEC,
		RATE_LIMITER_REQUEST_COUNT: process.env.RATE_LIMITER_REQUEST_COUNT,

		NOWPAYMENTS: {
			API_KEY: process.env.NOWPAYMENTS_API_KEY,
			BASE_URL: process.env.NOWPAYMENTS_BASE_URL,
			WEBHOOK_URL: process.env.NOWPAYMENTS_WEBHOOK_URL,
			WEBHOOK_SECRET: process.env.NOWPAYMENTS_WEBHOOK_SECRET

		},
		ADMIN_PRIVATE_KEY: process.env.ADMIN_PRIVATE_KEY,
		TOKEN_PRICE_IN_USD: parseInt(process.env.TOKEN_PRICE_IN_USD),
		BICONOMY: {
			POLYGON_APPID: process.env.BICONOMY_POLYGON_APPID,
			BINANCE_APPID: process.env.BICONOMY_BINANCE_APPID,
			POLYGON_PROJECTID: process.env.BICONOMY_POLYGON_PROJECTID,
			BINANCE_PROJECTID: process.env.BICONOMY_BINANCE_PROJECTID,
			METATXN_URL: process.env.BICONOMY_METATXN_URL,
		},
		POLYGON_RPC_URL: process.env.POLYGON_RPC_URL,
		BINANCE_RPC_URL: process.env.BINANCE_RPC_URL,
		NFT_DETAILS_BASE_URL: process.env.NFT_DETAILS_BASE_URL,
		ADMIN_BLUE_ADDRESS: process.env.ADMIN_BLUE_ADDRESS,
		POLYGON_CHAINID: process.env.POLYGON_CHAINID,
		BINANCE_CHAINID: process.env.BINANCE_CHAINID,
		BINANCE_TOKEN_ADDRESS: process.env.BINANCE_TOKEN_ADDRESS,
		BINANCE_MARKET_ADDRESS: process.env.BINANCE_MARKET_ADDRESS,
		BINANCE_NFT_ADDRESS: process.env.BINANCE_NFT_ADDRESS,
		REACT_APP_PINATA_API_KEY: process.env.REACT_APP_PINATA_API_KEY,
		REACT_APP_PINATA_API_KEY_SECRET: process.env.REACT_APP_PINATA_API_KEY_SECRET,
		PINATA_JWT_KEY: process.env.PINATA_JWT_KEY,
		MAIL_JET: {
			USER: process.env.EMAIL_USER,
			PASSWORD: process.env.EMAIL_PASSWORD,
			FROM: process.env.EMAIL_FROM,
		},

		COINFLOW_API_KEY: process.env.COINFLOW_API_KEY,
		COINFLOW_BASE_URL: process.env.COINFLOW_BASE_URL,

		TOKEN_ADDRESS: process.env.TOKEN_ADDRESS,
		MARKET_ADDRESS: process.env.MARKET_ADDRESS,
		NFT_ADDRESS: process.env.NFT_ADDRESS
	}
}
